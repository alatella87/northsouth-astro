---
import { getCollection } from "astro:content";
import Container from "@components/container.astro";
import Casestudies from "@components/casestudies.astro";
import Hero from "@components/hero.astro";
import Logos from "@components/logos.astro";
import Layout from "@layouts/Layout.astro";
import { Icon } from "astro-icon/components";

import { getLangFromUrl, useTranslations } from '../i18n/utils'

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

import ale from "@assets/ale.png";
import "../styles/global.css"

// Get team members as before
const publishedTeamMembers = await getCollection("team", ({ data }) => {
  return !data.draft && data.publishDate < new Date();
});

// Instead of hardcoding text in our steps array, we now use translation keys
const steps = [
  {
    id: 1,
    type: t("solutions.steps.1.type"),
    definition: t("solutions.steps.1.definition"),
    internalTools: [
      t("solutions.steps.1.internalTools.0"),
      t("solutions.steps.1.internalTools.1"),
      t("solutions.steps.1.internalTools.2"),
    ],
    externalTools: [],
  },
  {
    id: 2,
    type: t("solutions.steps.2.type"),
    definition: t("solutions.steps.2.definition"),
    internalTools: [
      t("solutions.steps.2.internalTools.0"),
      t("solutions.steps.2.internalTools.1"),
      t("solutions.steps.2.internalTools.2"),
      t("solutions.steps.2.internalTools.3"),
    ],
    externalTools: t("solutions.steps.2.externalTools"),
  },
  {
    id: 3,
    type: t("solutions.steps.3.type"),
    definition: t("solutions.steps.3.definition"),
    internalTools: [
      t("solutions.steps.3.internalTools.0"),
      t("solutions.steps.3.internalTools.1"),
    ],
    externalTools: t("solutions.steps.3.externalTools"),
  },
  {
    id: 4,
    type: t("solutions.steps.4.type"),
    definition: t("solutions.steps.4.definition"),
    internalTools: [t("solutions.steps.4.internalTools.0")],
    externalTools: t("solutions.steps.4.externalTools"),
  },
  {
    id: 5,
    type: t("solutions.steps.5.type"),
    definition: t("solutions.steps.5.definition"),
    internalTools: [
      t("solutions.steps.5.internalTools.0"),
      t("solutions.steps.5.internalTools.1"),
      t("solutions.steps.5.internalTools.2"),
    ],
    externalTools: t("solutions.steps.5.externalTools"),
  },
];

// Features array with translations
const features = [
  {
    type: t("solutions.features.1.type"),
    services: [
      t("solutions.features.1.services.0"),
      t("solutions.features.1.services.1"),
      t("solutions.features.1.services.2"),
      t("solutions.features.1.services.3"),
      t("solutions.features.1.services.4"),
    ],
    color: "#000",
    description: t("solutions.features.1.description"),
    icon: "bx:bxs-briefcase",
  },
  {
    type: t("solutions.features.2.type"),
    services: [
      t("solutions.features.2.services.0"),
      t("solutions.features.2.services.1"),
      t("solutions.features.2.services.2"),
      t("solutions.features.2.services.3"),
      t("solutions.features.2.services.4"),
    ],
    color: "#000",
    description: t("solutions.features.2.description"),
    icon: "bx:bxs-window-alt",
  },
  {
    type: t("solutions.features.3.type"),
    services: [
      t("solutions.features.3.services.0"),
      t("solutions.features.3.services.1"),
      t("solutions.features.3.services.2"),
      t("solutions.features.3.services.3"),
    ],
    color: "#000",
    description: t("solutions.features.3.description"),
    icon: "bx:bxs-window-alt",
  },
];
---

<html lang={lang}>
  <head>
    <meta name="title" content="Northsouth - Solutions for your business" />
    <meta property="og:image" content="https://north-south.eu/og-km.jpg" />
    <meta charset="UTF-8" />
    <meta
      name="description"
      content="Northsouth offre soluzioni digitali complete e innovative per il successo del tuo business, dall'analisi strategica allo sviluppo tecnologico su misura."
    />
    <!-- … other meta tags … -->
  </head>
</html>
<Layout title="">
  <Container>
    <div class="grid gap-4">
      <div>
        <div class="text-left mt-6 mb-24">
          <!-- Using translation keys for header text -->
          <h2 class="text-base font-semibold leading-7 text-black">
            {t("solutions.nav.services")}
          </h2>
          <h4
            class="mb-2 text-2xl font-bold tracking-tight text-black dark:text-white">
            {t("solutions.hero.title")}
          </h4>

          <div class="my-18 mb-10">
            <h1
              class="mb-4 text-2xl font-extrabold text-gray-900 dark:text-white md:text-3xl lg:text-4xl my-12">
              <span
                class="text-transparent bg-clip-text bg-gradient-to-r to-black from-gray-400">
                {t("solutions.mainTitle")}
              </span>
            </h1>
            <p
              class="text-lg font-normal text-gray-500 lg:text-xl dark:text-gray-400 mt-12">
              {t("solutions.mainDescription")}
            </p>
          </div>

          <h3
            class="mb-2 text-1xl font-extrabold text-gray-900 dark:text-white md:text-2xl lg:text-3xl my-6">
            <span
              class="text-transparent bg-clip-text bg-gradient-to-r to-black from-gray-400">
              {t("solutions.approachTitle")}
            </span>
          </h3>
          <div class="flex flex-row mt-4">
            <div>
              <blockquote
              class="w-1/2 p-8 my-2 border-s-4 border-gray-300 bg-gradient-to-r to-black from-gray-400">
                <p class="text-white">{t("solutions.approachQuote")}</p>
                <div class="flex justify-start items-center mr-8 mt-8">
                  <img
                    class="inline-block size-[92px] rounded-full ring-2 ring-white dark:ring-neutral-900"
                    src={ale.src}
                    alt="Avatar"
                  />
                  <span class="font-bold text-white ml-8">{t("solutions.approachBy")}</span>
                </div>
              </blockquote>
            </div>
          </div>

          <!-- Steps -->
          <ol
            class="lg:flex items-center w-full space-y-4 lg:space-x-8 lg:space-y-0 mt-12 mb-12">
            {
              steps.map((step) => (
                <li class="flex-1 list-step-solutions min-h-[300px]">
                  <a
                    href="https://pagedone.io/"
                    class="border-l-2 flex flex-col border-t-0 pl-4 pt-0 border-solid border-black font-medium lg:pt-4 lg:border-t-2 lg:border-l-0 lg:pl-0">
                    <span class="text-sm lg:text-base text-transparent bg-clip-text bg-gradient-to-r to-black from-gray-400">
                      Step {step.id}
                    </span>
                    <h4 class="text-base text-md text-gray-900">{step.type}</h4>
                    <div class="text-sm font-thin mt-4 min-h-[130px]">
                      {step.definition}
                    </div>
                  </a>
                  <div class="mt-4f flex flex-wrap">
                    {step.internalTools.map((tool) => (
                      <span class="bg-black text-white mt-1 text-xs font-medium me-2 px-2.5 py-0.5 rounded-sm dark:bg-blue-900 dark:text-blue-300">
                        {tool}
                      </span>
                    ))}
                  </div>
                </li>
              ))
            }
          </ol>

          <!-- Features (Niveaux d'analyse) -->
          <h3
            class="mb-4 text-1xl font-extrabold text-gray-900 dark:text-white md:text-2xl lg:text-3xl my-2">
            <span
              class="text-transparent bg-clip-text bg-gradient-to-r to-black from-gray-400">
              {t("solutions.features.title")}
            </span>
          </h3>
          <div
            class="grid sm:grid-cols-2 md:grid-cols-2 lg:grid-cols-3 mt-8 gap-16">
            {
              features.map((feature) => (
                <a
                  style={{ backgroundColor: feature.color }}
                  class="block max-w-sm p-6 bg-white border border-gray-200 rounded-lg shadow hover:bg-gray-100 dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-500 place-self-center min-h-[400px] relative">
                  <div class="stripes">
                    <div class="stripe" />
                    <div class="stripe" />
                    <div class="stripe" />
                  </div>
                  <h5 class="mb-2 text-base font-bold tracking-tight text-white dark:text-white">
                    {t("solutions.hero.title")}
                  </h5>
                  <h6 class="mb-2 text-1xl font-bold tracking-tight text-white dark:text-white">
                    <span class="text-2xl font-bold">
                       {feature.type}
                    </span>
                  </h6>
                  <div class="my-4 mb-auto">
                    {feature.services.map((service) => (
                      <span class="inline-flex items-center rounded-md bg-blue-50 px-4 py-1 mb-2 mr-2 text-xxs font-xs text-black ring-1 ring-inset ring-blue-700/10">
                        {service}
                      </span>
                    ))}
                  </div>
                  <span class="text-gray-300">{feature.description}</span>
                </a>
              ))
            }
          </div>

          <!-- CTA -->
          <div class="bg-white p-2 mt-32">
            <div class="max-w-xl mx-auto text-center">
              <h2
                class="text-gray-800 text-4xl font-extrabold relative after:absolute after:-bottom-5 after:h-1 after:w-1/2 after:left-0 after:right-0 after:mx-auto after:rounded-full">
                {t("solutions.cta.title")}
              </h2>
              <div class="mt-12">
                <p class="text-gray-800 text-base"></p>
              </div>
              <div class="flex max-sm:flex-col justify-center gap-6 mt-12">
                <iframe
                  title="Contact Form"
                  src="https://plugins.crisp.chat/urn:crisp.im:contact-form:0/contact/727a3632-d1bc-44a3-9179-65f86310a145"
                  referrerpolicy="origin"
                  sandbox="allow-forms allow-popups allow-scripts allow-same-origin"
                  width="100%"
                  height="1000px"
                  frameborder="0">
                </iframe>
              </div>
            </div>
          </div>
          <!-- End CTA -->

          <!-- Tools -->
          <div class="mt-24 text-center">
            <h2 class="text-base font-semibold leading-7 text-black">
              {t("solutions.tools.title")}
            </h2>
            <div
              class="flex gap-8 md:gap-20 items-center justify-center mt-12 flex-wrap">
              <Icon
                data-tooltip-target="tooltip-notion"
                class="size-8 md:size-8 hover:text-northsouth cursor-pointer"
                name="simple-icons:react"
              />
              <Icon
                data-tooltip-target="tooltip-notion"
                class="size-8 md:size-8 hover:text-northsouth cursor-pointer"
                name="simple-icons:vuedotjs"
              />
              <Icon
                data-tooltip-target="tooltip-notion"
                class="size-8 md:size-8 hover:text-northsouth cursor-pointer"
                name="simple-icons:astro"
              />
              <Icon
                data-tooltip-target="tooltip-notion"
                class="size-8 md:size-8 hover:text-northsouth cursor-pointer"
                name="simple-icons:nextdotjs"
              />
              <Icon
                data-tooltip-target="tooltip-notion"
                class="size-8 md:size-8 hover:text-northsouth cursor-pointer"
                name="simple-icons:tailwindcss"
              />
              <Icon
                data-tooltip-target="tooltip-notion"
                class="size-8 md:size-8 hover:text-northsouth cursor-pointer"
                name="simple-icons:typescript"
              />
              <Icon
                data-tooltip-target="tooltip-notion"
                class="size-8 md:size-8 hover:text-northsouth cursor-pointer"
                name="simple-icons:figma"
              />
            </div>
          </div>
        </div>
      </div>
    </div>
  </Container>
</Layout>

<Container />

<script type="text/javascript">
  window.$crisp = [];
  window.CRISP_WEBSITE_ID = "727a3632-d1bc-44a3-9179-65f86310a145";
  (function () {
    const d = document;
    const s = d.createElement("script");
    s.src = "https://client.crisp.chat/l.js";
    s.async = 1;
    d.getElementsByTagName("head")[0].appendChild(s);
  })();
</script>

<style>
  p {
    margin: 1rem 0;
  }
</style>